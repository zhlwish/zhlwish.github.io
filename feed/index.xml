<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>没有比人更高的山</title>
    <link>http://zhouliang.pro</link>
    <description>Where there is a will, there is a way</description>
    <copyright>除非另有声明，本网站采用&lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/cn/&quot;&gt;知识共享“署名 3.0 中国大陆”许可协议&lt;/a&gt;授权。</copyright>
    <pubDate>Wed, 04 Jun 2014 22:56:26 +0800</pubDate>
    <item>
      <title>Git笔记</title>
      <link>http://zhouliang.pro/2014/06/04/git-tips</link>
      <description>&lt;p&gt;工作中越来越离不开&lt;em&gt;&lt;a href=&quot;http://git-scm.com&quot;&gt;git&lt;/a&gt;&lt;/em&gt;，深感&lt;em&gt;&lt;a href=&quot;http://git-scm.com&quot;&gt;git&lt;/a&gt;&lt;/em&gt;的功能强大，基本上你会用到的、你能想到的功能都可以实现。本文是笔者遇到的问题以及解决方法的汇总，希望对读者有所帮助。&lt;/p&gt;
</description>
      <pubDate>Wed, 04 Jun 2014 22:56:26 +0800</pubDate>
      <dc:date>2014-06-04T22:56:26+08:00</dc:date>
    </item>
    <item>
      <title>Linux mount命令详解</title>
      <link>http://zhouliang.pro/2014/05/23/linux-mount-command</link>
      <description>&lt;p&gt;&lt;i&gt;mount&lt;/i&gt;命令在我心目中一直是个高大上的命令：首先，经常看见长度很长的&lt;i&gt;mount&lt;/i&gt;命令；其次，&lt;i&gt;mount&lt;/i&gt;是直接配置硬件的命令，敲命令的时候总是难免担心把机器搞挂了。因此，我一直以来在Mac OS和Ubuntu中都依靠操作系统自动检查插入的磁盘，就像在Windows里面一样，简直弱爆了。今天就抽空把整理一下这方面的知识。&lt;/p&gt;
</description>
      <pubDate>Fri, 23 May 2014 15:10:23 +0800</pubDate>
      <dc:date>2014-05-23T15:10:23+08:00</dc:date>
    </item>
    <item>
      <title>A new start</title>
      <link>http://zhouliang.pro/2014/05/18/a-new-start</link>
      <description>&lt;p&gt;前几天朋友告诉我VPS上的WordPress博客CPU占用率一直100%，怀疑被恶意攻击了。这几天刚换工作，有些忙，因此一直没时间琢磨，适逢周末，记起这个事情。想想WordPress性能问题不是一天两天了，因此决定换一个博客系统，可选择的不多，搜索到&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;，支持托管为&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;，垂涎已久，显得高端大气上档次不说，还支持从&lt;a href=&quot;http://import.jekyllrb.com/docs/wordpress/&quot;&gt;自动从WordPress迁移&lt;/a&gt;，很心动。&lt;/p&gt;
</description>
      <pubDate>Sun, 18 May 2014 07:55:57 +0800</pubDate>
      <dc:date>2014-05-18T07:55:57+08:00</dc:date>
    </item>
    <item>
      <title>MySQL查询优化：tmp_table_size与max_heap_table_size</title>
      <link>http://zhouliang.pro/2014/04/18/mysql-tmp_table_size-max_heap_table_size</link>
      <description>&lt;p&gt;对于某些query，MySQL会创建临时表来进行处理，临时表有两种：基于MEMORY存储引擎的临时内存表以及基于MyISAM存储引擎的临时磁盘表。当临时内存表的大小达到一定限制的时候，MySQL就会将临时内存表写入到磁盘，变为临时磁盘表。这个限制由tmp&lt;em&gt;table&lt;/em&gt;size和max&lt;em&gt;heap&lt;/em&gt;table_size这两个变量中的最小值确定。&lt;/p&gt;
</description>
      <pubDate>Fri, 18 Apr 2014 10:02:33 +0800</pubDate>
      <dc:date>2014-04-18T10:02:33+08:00</dc:date>
    </item>
    <item>
      <title>Linux dig 命令详解</title>
      <link>http://zhouliang.pro/2014/02/12/dig-command-in-linux</link>
      <description>&lt;p&gt;之所以会关注到这个命令，是因为最近在研究 &lt;a href=&quot;http://zhouliang.pro/2014/01/19/mysql-master-slave-replication/&quot;&gt;MySQL的主从复制&lt;/a&gt; 相关的技术，希望能实现当Slave落后Master比较多的时候自动将Slave从数据源中去除掉的功能。找了很多资料，没有比较好的现成办法。只能参考 &lt;a href=&quot;http://www.percona.com/software/percona-toolkit&quot;&gt;percona-toolkit&lt;/a&gt; 中的 &lt;a href=&quot;http://www.percona.com/doc/percona-toolkit/2.1/pt-heartbeat.html&quot;&gt;pt-heartbeat&lt;/a&gt; 命令的实现自己来做，在实现的过程中，发现这个&lt;code&gt;dig&lt;/code&gt;命令，深感有必要记录一下。&lt;/p&gt;
</description>
      <pubDate>Wed, 12 Feb 2014 00:37:28 +0800</pubDate>
      <dc:date>2014-02-12T00:37:28+08:00</dc:date>
    </item>
    <item>
      <title>令牌桶算法/Token Bucket Algorithm</title>
      <link>http://zhouliang.pro/2014/01/25/token-bucket-algorithm</link>
      <description>&lt;p&gt;在电信网络中最常用的流量控制算法是 &lt;a href=&quot;http://en.wikipedia.org/wiki/Token_bucket&quot;&gt;令牌桶算法&lt;/a&gt;（Token Bucket Algorithm），在Linux上同样也用了这个算法来 &lt;a href=&quot;http://lartc.org/howto/lartc.qdisc.classless.html#AEN690&quot;&gt;对带宽进行管理&lt;/a&gt;。当然使用场景不仅仅局限于此，凡是涉及到流量控制的地方都可以使用这种方法。例如，我们可以用这种方法对Web Service的访问量进行控制，可以避免Web Service遭受到恶意的攻击，也可以实现较复杂的流量分级计费，比如：调用次数1000次/s以下，每天收费10元；1000-2000次/s以下，每天收费40元等。&lt;/p&gt;
</description>
      <pubDate>Sat, 25 Jan 2014 01:40:56 +0800</pubDate>
      <dc:date>2014-01-25T01:40:56+08:00</dc:date>
    </item>
    <item>
      <title>MySQL Master-Slave Replication / 主从复制</title>
      <link>http://zhouliang.pro/2014/01/19/mysql-master-slave-replication</link>
      <description>&lt;p&gt;通过MySQL主从复制（Master-Slave）来实现读写分离是一种常用的扩展方法：所有的写操作通过Master完成，所有的读操作通过Slave来完成，也可以设置一主多从，或者双主的方式来实现负载均衡，极大的增强了MySQL的可扩展性。我所在的Team也是通过MySQL的这种主从复制的结构来扩展MySQL的性能的，不过，我并没有参与搭建这个平台，本文是我在业余进行的自学结果（不管你有没有读出来，这里的言外之意就是按照我这里搞如果搞出问题来了，我是不负责的）。&lt;/p&gt;
</description>
      <pubDate>Sun, 19 Jan 2014 18:11:31 +0800</pubDate>
      <dc:date>2014-01-19T18:11:31+08:00</dc:date>
    </item>
    <item>
      <title>Vim的Window/窗口</title>
      <link>http://zhouliang.pro/2014/01/13/vim-window</link>
      <description>&lt;p&gt;Vim实际上是一个多窗口的编辑器，启动Vim后实际上默认只打开了一个窗口，如果需要在编辑当前文件的时候参考其他的文件，就需要使用到多窗口了。Vim窗口中打开的是一个Vim缓冲区（Buffer），请参考我的另一篇博客&lt;a href=&quot;http://zhouliang.pro/2012/06/28/vim-buffer/&quot;&gt;Vim的Buffer/缓冲区&lt;/a&gt;，实际上也可以说不谈窗口而只谈缓冲区是不负责任的，因此就有了这篇小短文。额外提一下，Vim中的标签页（Tab）可以包含多个窗口，不像我们常用的&lt;a href=&quot;http://www.eclipse.org&quot;&gt;Eclipse&lt;/a&gt;、&lt;a href=&quot;http://macromates.com/&quot;&gt;TextMate&lt;/a&gt;或者&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime&lt;/a&gt;等编辑器，一个标签页只是对应一个窗口。学习一个工具，也要学习其背后的设计原理和设计哲学。&lt;/p&gt;
</description>
      <pubDate>Mon, 13 Jan 2014 01:09:51 +0800</pubDate>
      <dc:date>2014-01-13T01:09:51+08:00</dc:date>
    </item>
    <item>
      <title>MySQL删除表的时候忽略外键约束</title>
      <link>http://zhouliang.pro/2013/12/18/mysql-drop-table-ignore-foreign-key-constraints</link>
      <description>&lt;p&gt;删除表不是特别常用，特别是对于存在外键关联的表，删除更得小心。但是在开发过程中，发现Schema设计的有问题而且要删除现有的数据库中所有的表来重新创建也是常有的事情；另外在测试的时候，也有需要重新创建数据库的所有表。当然很多自动化工具也可以做这样的事情。&lt;/p&gt;
</description>
      <pubDate>Wed, 18 Dec 2013 08:10:11 +0800</pubDate>
      <dc:date>2013-12-18T08:10:11+08:00</dc:date>
    </item>
    <item>
      <title>HTTPS与SSL(二)：X.509</title>
      <link>http://zhouliang.pro/2013/09/13/https-ssl-x509</link>
      <description>&lt;p&gt;读完上一篇&lt;a href=&quot;http://zhouliang.com/2013/08/26/https-ssl-rsa/&quot;&gt;《HTTPS与SSL(一)：RSA》&lt;/a&gt;，你应该大概了解了RSA加密在整个软件生态中起到的巨大作用。然而，现实生活中仅有加密还远远不够，假设你正在和小明打电话，即使电话传输中使用了万无一失的加密方式，你怎么保证正在和你对话的就是小明本人呢？你说，我听得出来小明的声音，但是声音可以造假；你说，我问小明几个只有我们两个知道答案的问题，呵呵，这种现实生活中也许可以，但是在互联网中世界中不可能（这种方式到是非常好地用在了一些网站的找回密码功能中）。&lt;/p&gt;

&lt;p&gt;肿么办呢？X.509正是为此而生。&lt;/p&gt;
</description>
      <pubDate>Fri, 13 Sep 2013 00:06:36 +0800</pubDate>
      <dc:date>2013-09-13T00:06:36+08:00</dc:date>
    </item>
    <item>
      <title>HTTPS与SSL(一)：RSA</title>
      <link>http://zhouliang.pro/2013/08/26/https-ssl-rsa</link>
      <description>&lt;p&gt;工作中常遇到一些关于安全方面的名词，如SSL、HTTPS、证书、pem、keystore、PGP等，作为不是对安全不甚了解的程序员而言，深感压力巨大，于是趁周末得闲查阅了相关资料，做简要记录。&lt;/p&gt;
</description>
      <pubDate>Mon, 26 Aug 2013 01:06:36 +0800</pubDate>
      <dc:date>2013-08-26T01:06:36+08:00</dc:date>
    </item>
    <item>
      <title>波兰式、逆波兰式与表达式求值</title>
      <link>http://zhouliang.pro/2013/08/18/polish_notation-reverse_polish_notation</link>
      <description>&lt;p&gt;波兰式、逆波兰式是《数据结构》课程中讲解关于栈的时候提到的，栈是很简单的一种数据结构。但是这些理论的提出却是计算机早期发展领域的重大突破，值得仔细回味。&lt;/p&gt;
</description>
      <pubDate>Sun, 18 Aug 2013 21:15:38 +0800</pubDate>
      <dc:date>2013-08-18T21:15:38+08:00</dc:date>
    </item>
    <item>
      <title>Java工作流引擎：jBPM、Activiti以及SWF</title>
      <link>http://zhouliang.pro/2013/07/06/bpm-jbpm-activiti</link>
      <description>&lt;p&gt;这只是一篇非常粗浅的记录我对工作流引擎认识的文章。知道工作流引擎是很久之前了，但是一直都没有机会尝试，一是没有业务上的需要，二是感觉工作流入门不容易。最近，项目中用到了一点工作流的东西，虽然我没有具体参与，但是了解一下还是好的。于是抽周末两天时间读了一些文章和jBPM以及Activiti的User Reference，本文做一下记录。SWF指的是Amazon Simple Workflow。&lt;/p&gt;
</description>
      <pubDate>Sat, 06 Jul 2013 11:19:25 +0800</pubDate>
      <dc:date>2013-07-06T11:19:25+08:00</dc:date>
    </item>
    <item>
      <title>转载：汪曾祺《八千岁》</title>
      <link>http://zhouliang.pro/2013/06/16/wang-zengqi-ba-qian-sui</link>
      <description>&lt;p&gt;据说他是靠八千钱起家的，所以大家背后叫他八千岁。八千钱是八千个制钱，即八百枚当十的铜元。当地以一百铜元为一吊，八千钱也就是八吊钱。按当时银钱市价，三吊钱兑换一块银元，八吊钱还不到两块七角钱。两块七角钱怎么就能起了家呢？为什么整整是八千钱，不是七千九，不是八千一？这些，谁也不去追究，然而死死地认定了他就是八千钱起家的，他就是八千岁！&lt;/p&gt;
</description>
      <pubDate>Sun, 16 Jun 2013 10:16:12 +0800</pubDate>
      <dc:date>2013-06-16T10:16:12+08:00</dc:date>
    </item>
    <item>
      <title>转载：梁启超《最苦与最乐》</title>
      <link>http://zhouliang.pro/2013/06/14/liang-qichao-zui-ku-yu-zui-le</link>
      <description>&lt;p&gt;人生什么事最苦呢？贫吗？不是。失意吗？不是。老吗？死吗？都不是。我说人生最苦的事，莫苦于身上背著一种未了的责任。人若能知足，虽贫不苦；若能安分（不多作分外希望），虽然失意不苦；老、死乃人生难免的事，达观的人看得很平常，也不算什么苦。独是凡人生在世间一天，便有一天应该的事。该做的事没有做完，便像是有几千斤重担子压在肩头，再苦是没有的了。为什么呢？因为受那良心责备不过，要逃躲也没处逃躲呀！&lt;/p&gt;
</description>
      <pubDate>Fri, 14 Jun 2013 11:48:36 +0800</pubDate>
      <dc:date>2013-06-14T11:48:36+08:00</dc:date>
    </item>
    <item>
      <title>几个有意思的Ruby全局变量</title>
      <link>http://zhouliang.pro/2013/01/15/ruby-global-variables-you-should-known</link>
      <description>&lt;p&gt;最近在做Ruby on Rails往JRuby上的迁移工作，积累了一些关于平常写代码时不太容易注意的环境变量、命令行参数和全局变量，了解这些知识对于进一步学习Ruby有很大的帮助，也有助于阅读一些开源框架如&lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt;、&lt;a href=&quot;https://github.com/rspec&quot;&gt;Rspec&lt;/a&gt;的代码。本文是这个小系列的第三篇。其他两篇分别是&lt;a href=&quot;http://www.zhlwish.com/2013/01/10/ruby-environment-variables-you-should-known/&quot;&gt;几个有意思的Ruby环境变量&lt;/a&gt;和&lt;a href=&quot;http://www.zhlwish.com/2013/01/07/ruby-command-line-params-you-should-know/&quot;&gt;几个有意思的Ruby命令行参数&lt;/a&gt; 。&lt;/p&gt;
</description>
      <pubDate>Tue, 15 Jan 2013 00:39:37 +0800</pubDate>
      <dc:date>2013-01-15T00:39:37+08:00</dc:date>
    </item>
    <item>
      <title>几个有意思的Ruby环境变量</title>
      <link>http://zhouliang.pro/2013/01/10/ruby-environment-variables-you-should-known</link>
      <description>&lt;p&gt;最近在做Ruby on Rails往JRuby上的迁移工作，积累了一些关于平常写代码时不太容易注意的环境变量、命令行参数和全局变量，了解这些知识对于进一步学习Ruby有很大的帮助，也有助于阅读一些开源框架如&lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt;、&lt;a href=&quot;https://github.com/rspec&quot;&gt;Rspec&lt;/a&gt;的代码。本文是这个小系列的第二篇。 &lt;/p&gt;
</description>
      <pubDate>Thu, 10 Jan 2013 11:24:03 +0800</pubDate>
      <dc:date>2013-01-10T11:24:03+08:00</dc:date>
    </item>
    <item>
      <title>几个有意思的Ruby命令行参数 </title>
      <link>http://zhouliang.pro/2013/01/07/ruby-command-line-params-you-should-know</link>
      <description>&lt;p&gt;最近在做Ruby on Rails往JRuby上的迁移工作，积累了一些关于平常写代码时不太容易注意的环境变量、命令行参数和全局变量，了解这些知识对于进一步学习Ruby有很大的帮助，也有助于阅读一些开源框架如&lt;a href=&quot;https://github.com/rails/rails&quot;&gt;Rails&lt;/a&gt;、&lt;a href=&quot;https://github.com/rspec/rspec-core&quot;&gt;Rspec&lt;/a&gt;的代码。本文算是这个小系列的第一篇。 &lt;/p&gt;
</description>
      <pubDate>Mon, 07 Jan 2013 23:37:17 +0800</pubDate>
      <dc:date>2013-01-07T23:37:17+08:00</dc:date>
    </item>
    <item>
      <title>VIM字符大小写转换</title>
      <link>http://zhouliang.pro/2012/09/27/vim-upcase-downcase</link>
      <description>&lt;p&gt;VIM提供了字符大小写转换的快捷键，在coding的时候会感觉很贴心，当然，前提是记住他们。&lt;/p&gt;
</description>
      <pubDate>Thu, 27 Sep 2012 11:57:59 +0800</pubDate>
      <dc:date>2012-09-27T11:57:59+08:00</dc:date>
    </item>
    <item>
      <title>JavaScript Date</title>
      <link>http://zhouliang.pro/2012/09/11/javascript-date</link>
      <description>&lt;p&gt;今天工作中遇到JavaScript的Date计算和格式化的问题，顺便整理了一下JavaScript中的Date的相关API，试做简单记录，代码均在&lt;a href=\&quot;http://nodejs.org/\&quot;&gt;Node.js&lt;/a&gt;上测试通过。&lt;/p&gt;
</description>
      <pubDate>Tue, 11 Sep 2012 16:26:48 +0800</pubDate>
      <dc:date>2012-09-11T16:26:48+08:00</dc:date>
    </item>
    <item>
      <title>[转载]柴静专访剑桥大学校长</title>
      <link>http://zhouliang.pro/2012/08/06/chaijing-cambridge-university</link>
      <description>&lt;p&gt;解说：在采访剑桥校长乐思哲先生之前，我们在网络上看到了一段和他有关的视频。
字幕：2010年12月6日，剑桥校园 学生抗议当局提高大学学费
柴：您会感到紧张或者难堪吗？
校长：不，完全不会。因为这是学术界，在这里我们期待辩论，并鼓励大学里的思想自由。
柴：但更多的校长可能希望得到尊敬和服从，你不是吗？
校长：那他们就不会来剑桥。&lt;/p&gt;
</description>
      <pubDate>Mon, 06 Aug 2012 22:39:35 +0800</pubDate>
      <dc:date>2012-08-06T22:39:35+08:00</dc:date>
    </item>
    <item>
      <title>[Rails代码解读]Rack在Rails中的使用</title>
      <link>http://zhouliang.pro/2012/08/01/rails-rack</link>
      <description>&lt;p&gt;今天工作中遇到Rails的一个问题，最后发现是使用的一个叫Rack包版本不兼容Rails2.3引起的，虽然问题很容易就解决了，但是Rack这个包是干什么的却引发了我的兴趣，经过查资料阅读代码，写了这篇博客。Rack是一个中间件，介于Web应用程序和Web服务器之间，为所有的Web服务器都提供了统一的接口，使用Rack构建的Web应用程序能简单换到其他的Web服务器上，因为Rails在底层用到了Rack，所以我们可以在开发的时候使用Webrick，然后通过fastcgi或者ruby_mod发布到nginx或者Apache。 &lt;/p&gt;
</description>
      <pubDate>Wed, 01 Aug 2012 23:57:40 +0800</pubDate>
      <dc:date>2012-08-01T23:57:40+08:00</dc:date>
    </item>
    <item>
      <title>[Rails代码解读]ActiveSupport::Concern</title>
      <link>http://zhouliang.pro/2012/07/23/rails-activesupport-concern</link>
      <description>&lt;p&gt;模块是方法和常量的集合，模块和类一样，其中的可以包括两种方法：实例方法(Instance Method)、模块方法(Module Method)。当一个类混入(Mixin，本文中称混入)一个模块时，模块中的实例方法会成为该类的方法(具体是类的类方法还是实例方法，取决于是include还是extend)。但是模块方法会被忽略，而且，模块方法可以虽然定义在模块中，但是可以直接调用。&lt;/p&gt;
</description>
      <pubDate>Mon, 23 Jul 2012 00:49:01 +0800</pubDate>
      <dc:date>2012-07-23T00:49:01+08:00</dc:date>
    </item>
    <item>
      <title>JavaScript中的this</title>
      <link>http://zhouliang.pro/2012/07/08/javascript-this</link>
      <description>&lt;p&gt;JavaScript是一门极为灵活的语言，其神奇之处在于其面向对象的实现方式和函数。而函数往往又认为是JavaScript中最Amazing（或者翻译为惊艳？）的地方。&lt;a href=&quot;http://www.jquery.com&quot;&gt;JQuery&lt;/a&gt;这样强大的库正是建立于JavaScript灵活的函数之上的。而要正确的使用JavaScript也必须对对象和函数有更深入的了解，笔者在开发JQuery插件的过程中，遇到了很多疑惑，进而得到了一些关于对象和函数的心得，希望能对读者有用。&lt;/p&gt;
</description>
      <pubDate>Sun, 08 Jul 2012 17:30:17 +0800</pubDate>
      <dc:date>2012-07-08T17:30:17+08:00</dc:date>
    </item>
    <item>
      <title>用EasyMock进行单元测试：什么是EasyMock</title>
      <link>http://zhouliang.pro/2012/06/29/easymock-1</link>
      <description>&lt;p&gt;我们都知道单元测试，也常常写单元测试，但是对于什么是单元测试却没有仔细思考过，大概觉得创建一个类继承TestCase，然后写一些assert语句就算是了吧。当然我也常常遇到有人认为在Java类中写main函数也算是单元测试的。总之，归结到一句话，我们可能觉得写了一段代码对我的代码中的一个方法进行了验证，就算是单元测试了。一直到前不久之前，我也算是这大部分人中的一个。由于我之前写SSH比较多，因此我也想当然得认为要测试一个DAO，就必须往数据库里面插入一些数据，然后调用DAO，看能否返回正确的结果这是单元测试。 事实上，我错了。&lt;/p&gt;
</description>
      <pubDate>Fri, 29 Jun 2012 00:49:12 +0800</pubDate>
      <dc:date>2012-06-29T00:49:12+08:00</dc:date>
    </item>
    <item>
      <title>Vim的Buffer/缓冲区</title>
      <link>http://zhouliang.pro/2012/06/28/vim-buffer</link>
      <description>&lt;p&gt;顾名思义，Buffer是内存中的一块缓冲区域，用于临时存放Vim打开过的文件。用Vim打开文件后，文件就自动被加入到Buffer队列中，而且Buffer中永远是最新的版本，修改文件后还未保存时，改动就存在于Buffer中。打开过的文件会一直存在Buffer中，除非手动的删除（bw命令，不过很多时候没这个必要）。在阅读或者编写代码的时候，会经常在多个文件之间跳转，很好的利用Buffer会当然的make
your life more easier。&amp;#39;&lt;/p&gt;
</description>
      <pubDate>Thu, 28 Jun 2012 00:12:50 +0800</pubDate>
      <dc:date>2012-06-28T00:12:50+08:00</dc:date>
    </item>
    <item>
      <title>[转载]辩证法与放屁</title>
      <link>http://zhouliang.pro/2012/06/20/dialectics</link>
      <description>&lt;p&gt;来源：&lt;a href=&quot;http://bbs.cenet.org.cn/html/board92523/topic26091.htm&quot;&gt;http://bbs.cenet.org.cn/html/board92523/topic26091.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第一堂课&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;上课时，我放了一个屁--很普通的屁。既不很臭，当然也绝对不香。&lt;/p&gt;

&lt;p&gt;可怕的是，教授正在讲辩证法。&lt;/p&gt;

&lt;p&gt;“请你自己对这个屁作一下判断，”教授说，“它好还是不好？”&lt;/p&gt;

&lt;p&gt;我只得说：“不好。”&lt;/p&gt;

&lt;p&gt;“错了，”教授说，“任何事物都有矛盾组成，有它不好的一面，肯定有它好的一面。”&lt;/p&gt;

&lt;p&gt;“那么说它好也不对了？”我问。&lt;/p&gt;

&lt;p&gt;“当然。”教授说。&lt;/p&gt;

&lt;p&gt;“它既好又不好。”&lt;/p&gt;
</description>
      <pubDate>Wed, 20 Jun 2012 20:52:43 +0800</pubDate>
      <dc:date>2012-06-20T20:52:43+08:00</dc:date>
    </item>
    <item>
      <title>用MySQL Procedure同时像级联表插入数据</title>
      <link>http://zhouliang.pro/2012/04/17/mysql-procedure</link>
      <description>&lt;p&gt;一个月以来都没写博客，这篇博客的目的是提醒自己继续写下去，顺便记下笔记，看官若无兴趣请直接飘过。级联表是关系数据库存储领域模型（Domain Model）中一对多关系的不二法门，比如“学生”和“班级”，实在是常用得很。创建表时建立外键关联，查询时使用inner join或者多表联合查询非常便捷。不过插入数据则相对麻烦，因为关键关联的缘故，需要先插入主表，然后再插入从表，如果使用auto_increment主键，在插入从表之前必须获取刚刚插入主表时生成的ID。&lt;/p&gt;
</description>
      <pubDate>Tue, 17 Apr 2012 23:46:43 +0800</pubDate>
      <dc:date>2012-04-17T23:46:43+08:00</dc:date>
    </item>
    <item>
      <title>Linux上diff命令详解</title>
      <link>http://zhouliang.pro/2012/03/05/linux-dif</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Diff&quot; target=&quot;_blank&quot;&gt;diff&lt;/a&gt;程序是linux上非常重要的工具，用于比较文件的内容，特别是比较两个版本不同的文件(本文中的a.c、b.c可以理解为两个版本的同一个文件，b.c是在a.c的基础上的修正版)以找到改动的地方。diff在命令行中打印每一个行的改动。最新版本的diff还支持二进制文件。diff程序的输出被称为补丁(patch)，因为unix系统中还有一个&lt;a href=&quot;http://en.wikipedia.org/wiki/Patch_(Unix)&quot; target=&quot;_blank&quot;&gt;patch&lt;/a&gt;程序，可以根据diff的输出将a.c的文件内容更新为b.c。diff是svn、cvs、git等版本控制工具不可或缺的一部分。&lt;/p&gt;
</description>
      <pubDate>Mon, 05 Mar 2012 23:13:32 +0800</pubDate>
      <dc:date>2012-03-05T23:13:32+08:00</dc:date>
    </item>
    <item>
      <title>转载：民国是历史还是现实(陈丹青)</title>
      <link>http://zhouliang.pro/2012/02/22/chendanqing-minguo</link>
      <description>&lt;p&gt;该视频来自于2011年9月12日举办的&lt;a href=&quot;http://special.umiwi.com/Utopia/&quot;&gt;理想国文化沙龙&lt;/a&gt;，文字稿来源于&lt;a href=&quot;http://special.umiwi.com/2011/0911/36231_7.shtml&quot;&gt;优米网&lt;/a&gt;，本人有部分修正。&lt;/p&gt;
</description>
      <pubDate>Wed, 22 Feb 2012 20:57:21 +0800</pubDate>
      <dc:date>2012-02-22T20:57:21+08:00</dc:date>
    </item>
    <item>
      <title>耶鲁大学、北京大学和华中科技大学的宣传片</title>
      <link>http://zhouliang.pro/2012/02/13/yale-pku-hust</link>
      <description>&lt;p&gt;最近耶鲁大学和北京大学的宣传片对比在微博上很火，对北大也是骂声一片，毕竟人们对北大的期望要更高些。耶鲁大学的宣传片很运动、很活力、很激情，看完顿感身上有了活力。北大的让人感觉很艺术，但是也很假，不过毕竟相比以往的宣传片有很大的进步。然后，我就找了咱华中科技大学的宣传片，有老版和新版，新版应该是5年以内拍的，顿感差距啊。今年是华中科技大学60年校庆，应该会有新的宣传片出炉，期望有所进步吧。&lt;/p&gt;
</description>
      <pubDate>Mon, 13 Feb 2012 11:56:16 +0800</pubDate>
      <dc:date>2012-02-13T11:56:16+08:00</dc:date>
    </item>
    <item>
      <title>XP系统Vmware 7安装Linux系统能ping通不能SSH连接的问题</title>
      <link>http://zhouliang.pro/2012/02/11/xp-vmware-7-linux-ping-ssh-samba</link>
      <description>&lt;p&gt;一直用VMware Workstaion上安装Linux虚拟机进行开发的，安装软件等比Windows上方便很多，因为部署环境也是Linux，因此也避免了编码、换行符等平台兼容的问题，在Linux虚拟机中安装Samba解决文件系统共享的问题，一直都相安无事。最近为电脑重装了XP，安装好VMware Workstation 7后运行以前的ArchLinux的虚拟机，从发现samba连接不上了，可以在网络邻居的工作组中找到Linux虚拟机，但是共享无法连接，连登录的对话框都不显示。&lt;/p&gt;
</description>
      <pubDate>Sat, 11 Feb 2012 20:28:42 +0800</pubDate>
      <dc:date>2012-02-11T20:28:42+08:00</dc:date>
    </item>
    <item>
      <title>纪念张孝祥老师</title>
      <link>http://zhouliang.pro/2012/01/03/zhang-xiao-xiang</link>
      <description>&lt;p&gt;昨天在微博上看到&lt;a href=\&quot;http://blog.csdn.net/zhangxiaoxiang\&quot; target=\&quot;_blank\&quot;&gt;张孝祥&lt;/a&gt;老师突然病逝，我刚开始搞混了，我以为是孙鑫。孙鑫大家都知道，有一套视频教程讲VC++的，在BT上很火，但是后来不让下载了，说是孙鑫自己办了培训公司，因此不让这类视频在网上传播了。过了一段时间我才意识到我错了，张孝祥最初是讲Java，我Java入门就是看的他的视频，讲Java线程讲得特别清楚，他也创办了培训公司，但是所有的培训视频都在&lt;a href=\&quot;http://www.verycd.com/topics/239368/\&quot; target=\&quot;_blank\&quot;&gt;verycd&lt;/a&gt;上可以免费下载，全部公开的。顿时让我肃然起敬。后来读&lt;a href=\&quot;http://blog.csdn.net/zhangxiaoxiang\&quot; target=\&quot;_blank\&quot;&gt;张孝祥在CSDN上的博客&lt;/a&gt;，感觉到他的不容易。现如今，计算机科班毕业的大佬们看不起非科班的，就连称谓都有两种：程序猿和程序员。非科班的被认为只会编码，不懂架构，不懂算法的代码民工。而张孝祥做为“代码民工”的培训机构创始人，同样也被大多数人看不起，甚至是贬低，有些公司公然号称不招传智播客的毕业生，但是他还是坚持去做这一份事业。我想说的是，即使是计算机科班的毕业生在编程入门的时候谁不以能有通俗易懂的视频培训课程而感到幸福呢，更何况是所有的视频课程都能通过互联网进行下载，而且免费。这是不仅仅是一种自信，而是一种信仰，一种追求。这样的追求，谁也不能苛责。&lt;/p&gt;
</description>
      <pubDate>Tue, 03 Jan 2012 00:27:51 +0800</pubDate>
      <dc:date>2012-01-03T00:27:51+08:00</dc:date>
    </item>
    <dc:date>2014-06-04T22:56:26+08:00</dc:date>
  </channel>
</rss>